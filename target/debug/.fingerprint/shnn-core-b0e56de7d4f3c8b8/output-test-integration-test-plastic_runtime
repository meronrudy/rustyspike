{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `internal-tests`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/tests/plastic_runtime.rs","byte_start":42,"byte_end":68,"line_start":1,"line_end":1,"column_start":43,"column_end":69,"is_primary":true,"text":[{"text":"#![cfg(all(test, feature = \"plastic-sum\", feature = \"internal-tests\"))]","highlight_start":43,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `anyhow`, `async`, `crossbeam`, `default`, `hardware-accel`, `heapless`, `json-errors`, `legacy-async`, `legacy-concurrency`, `legacy-deps`, `legacy-math`, `legacy-serde`, `legacy-tests`, `logging`, `math`, `nalgebra`, `ndarray`, `no-std`, `optimized`, `parallel`, `plastic-sum`, `rand`, `serde`, `serialize`, `simd`, `std`, `tokio`, and `zero-deps`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `internal-tests` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `internal-tests`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/tests/plastic_runtime.rs:1:43\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg(all(test, feature = \"plastic-sum\", feature = \"internal-tests\"))]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `anyhow`, `async`, `crossbeam`, `default`, `hardware-accel`, `heapless`, `json-errors`, `legacy-async`, `legacy-concurrency`, `legacy-deps`, `legacy-math`, `legacy-serde`, `legacy-tests`, `logging`, `math`, `nalgebra`, `ndarray`, `no-std`, `optimized`, `parallel`, `plastic-sum`, `rand`, `serde`, `serialize`, `simd`, `std`, `tokio`, and `zero-deps`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `internal-tests` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
