{"$message_type":"diagnostic","message":"unused import: `NeuronId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/connectivity/mod.rs","byte_start":239,"byte_end":247,"line_start":7,"line_end":7,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    spike::{NeuronId, Spike},","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/connectivity/mod.rs","byte_start":238,"byte_end":239,"line_start":7,"line_end":7,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    spike::{NeuronId, Spike},","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/connectivity/mod.rs","byte_start":239,"byte_end":249,"line_start":7,"line_end":7,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    spike::{NeuronId, Spike},","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/connectivity/mod.rs","byte_start":254,"byte_end":255,"line_start":7,"line_end":7,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"    spike::{NeuronId, Spike},","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `NeuronId`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/connectivity/mod.rs:7:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    spike::{NeuronId, Spike},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `PlasticityRule`, `SpikeEncoder`, and `types::SpikeRoute`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":301,"byte_end":318,"line_start":8,"line_end":8,"column_start":62,"column_end":79,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, PlasticConnectivity, types::SpikeRoute},","highlight_start":62,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":414,"byte_end":428,"line_start":11,"line_end":11,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    plasticity::{PlasticityRule, STDPConfig},","highlight_start":18,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":458,"byte_end":470,"line_start":12,"line_end":12,"column_start":16,"column_end":28,"is_primary":true,"text":[{"text":"    encoding::{SpikeEncoder, MultiModalEncoder},","highlight_start":16,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":299,"byte_end":318,"line_start":8,"line_end":8,"column_start":60,"column_end":79,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, PlasticConnectivity, types::SpikeRoute},","highlight_start":60,"highlight_end":79}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":413,"byte_end":414,"line_start":11,"line_end":11,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    plasticity::{PlasticityRule, STDPConfig},","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":414,"byte_end":430,"line_start":11,"line_end":11,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    plasticity::{PlasticityRule, STDPConfig},","highlight_start":18,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":440,"byte_end":441,"line_start":11,"line_end":11,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    plasticity::{PlasticityRule, STDPConfig},","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":457,"byte_end":458,"line_start":12,"line_end":12,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"    encoding::{SpikeEncoder, MultiModalEncoder},","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":458,"byte_end":472,"line_start":12,"line_end":12,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    encoding::{SpikeEncoder, MultiModalEncoder},","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":489,"byte_end":490,"line_start":12,"line_end":12,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"    encoding::{SpikeEncoder, MultiModalEncoder},","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PlasticityRule`, `SpikeEncoder`, and `types::SpikeRoute`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:8:62\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectivity::{NetworkConnectivity, PlasticConnectivity, types::SpikeRoute},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    plasticity::{PlasticityRule, STDPConfig},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    encoding::{SpikeEncoder, MultiModalEncoder},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `core::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":547,"byte_end":556,"line_start":16,"line_end":16,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use core::fmt;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":543,"byte_end":558,"line_start":16,"line_end":17,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use core::fmt;","highlight_start":1,"highlight_end":15},{"text":"use core::any::Any;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::fmt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::fmt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `NetworkStats` and `types::ConnectivityStats`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":262,"byte_end":286,"line_start":7,"line_end":7,"column_start":41,"column_end":65,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, types::ConnectivityStats},","highlight_start":41,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":336,"byte_end":348,"line_start":8,"line_end":8,"column_start":48,"column_end":60,"is_primary":true,"text":[{"text":"    network::{SpikeNetwork, PlasticityManager, NetworkStats},","highlight_start":48,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":240,"byte_end":241,"line_start":7,"line_end":7,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, types::ConnectivityStats},","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":260,"byte_end":286,"line_start":7,"line_end":7,"column_start":39,"column_end":65,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, types::ConnectivityStats},","highlight_start":39,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":286,"byte_end":287,"line_start":7,"line_end":7,"column_start":65,"column_end":66,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, types::ConnectivityStats},","highlight_start":65,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":334,"byte_end":348,"line_start":8,"line_end":8,"column_start":46,"column_end":60,"is_primary":true,"text":[{"text":"    network::{SpikeNetwork, PlasticityManager, NetworkStats},","highlight_start":46,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `NetworkStats` and `types::ConnectivityStats`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/builder.rs:7:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectivity::{NetworkConnectivity, types::ConnectivityStats},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    network::{SpikeNetwork, PlasticityManager, NetworkStats},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Channel`, `Receiver`, `Sender`, `TaskHandle`, `Task`, `executor::Executor`, `runtime::Runtime`, `timer::Timer`, and `waker::CustomWaker`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":664,"byte_end":680,"line_start":24,"line_end":24,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    runtime::Runtime,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":693,"byte_end":697,"line_start":25,"line_end":25,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    task::{Task, TaskHandle},","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":699,"byte_end":709,"line_start":25,"line_end":25,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    task::{Task, TaskHandle},","highlight_start":18,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":716,"byte_end":734,"line_start":26,"line_end":26,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    executor::Executor,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":740,"byte_end":752,"line_start":27,"line_end":27,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    timer::Timer,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":758,"byte_end":776,"line_start":28,"line_end":28,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    waker::CustomWaker,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":789,"byte_end":796,"line_start":29,"line_end":29,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    sync::{Channel, Receiver, Sender},","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":798,"byte_end":806,"line_start":29,"line_end":29,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"    sync::{Channel, Receiver, Sender},","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":808,"byte_end":814,"line_start":29,"line_end":29,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"    sync::{Channel, Receiver, Sender},","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":608,"byte_end":820,"line_start":22,"line_end":31,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[cfg(feature = \"async\")]","highlight_start":1,"highlight_end":26},{"text":"use shnn_async_runtime::{","highlight_start":1,"highlight_end":26},{"text":"    runtime::Runtime,","highlight_start":1,"highlight_end":22},{"text":"    task::{Task, TaskHandle},","highlight_start":1,"highlight_end":30},{"text":"    executor::Executor,","highlight_start":1,"highlight_end":24},{"text":"    timer::Timer,","highlight_start":1,"highlight_end":18},{"text":"    waker::CustomWaker,","highlight_start":1,"highlight_end":24},{"text":"    sync::{Channel, Receiver, Sender},","highlight_start":1,"highlight_end":39},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Channel`, `Receiver`, `Sender`, `TaskHandle`, `Task`, `executor::Executor`, `runtime::Runtime`, `timer::Timer`, and `waker::CustomWaker`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/async_processing.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    runtime::Runtime,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    task::{Task, TaskHandle},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    executor::Executor,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    timer::Timer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    waker::CustomWaker,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sync::{Channel, Receiver, Sender},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Deserialize` and `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":965,"byte_end":974,"line_start":40,"line_end":40,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"use shnn_serialize::{Serialize, Deserialize};","highlight_start":22,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":976,"byte_end":987,"line_start":40,"line_end":40,"column_start":33,"column_end":44,"is_primary":true,"text":[{"text":"use shnn_serialize::{Serialize, Deserialize};","highlight_start":33,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/async_processing.rs","byte_start":914,"byte_end":990,"line_start":39,"line_end":41,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[cfg(feature = \"serialize\")]","highlight_start":1,"highlight_end":30},{"text":"use shnn_serialize::{Serialize, Deserialize};","highlight_start":1,"highlight_end":46},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Deserialize` and `Serialize`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/async_processing.rs:40:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse shnn_serialize::{Serialize, Deserialize};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BinaryDecoder`, `BinaryEncoder`, `BufferMut`, `Buffer`, `Deserialize`, `LayerState`, `NeuralSerializer`, `Serialize`, `SpikeEvent`, `WeightMatrix`, and `ZeroCopyBuffer`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":494,"byte_end":503,"line_start":17,"line_end":17,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":505,"byte_end":516,"line_start":17,"line_end":17,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":518,"byte_end":531,"line_start":17,"line_end":17,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":533,"byte_end":546,"line_start":17,"line_end":17,"column_start":44,"column_end":57,"is_primary":true,"text":[{"text":"    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,","highlight_start":44,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":552,"byte_end":558,"line_start":18,"line_end":18,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Buffer, BufferMut, ZeroCopyBuffer,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":560,"byte_end":569,"line_start":18,"line_end":18,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    Buffer, BufferMut, ZeroCopyBuffer,","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":571,"byte_end":585,"line_start":18,"line_end":18,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Buffer, BufferMut, ZeroCopyBuffer,","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":600,"byte_end":610,"line_start":19,"line_end":19,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":612,"byte_end":624,"line_start":19,"line_end":19,"column_start":26,"column_end":38,"is_primary":true,"text":[{"text":"    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},","highlight_start":26,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":626,"byte_end":636,"line_start":19,"line_end":19,"column_start":40,"column_end":50,"is_primary":true,"text":[{"text":"    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},","highlight_start":40,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":638,"byte_end":654,"line_start":19,"line_end":19,"column_start":52,"column_end":68,"is_primary":true,"text":[{"text":"    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},","highlight_start":52,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/serialization.rs","byte_start":438,"byte_end":660,"line_start":15,"line_end":21,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[cfg(feature = \"serialize\")]","highlight_start":1,"highlight_end":30},{"text":"use shnn_serialize::{","highlight_start":1,"highlight_end":22},{"text":"    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,","highlight_start":1,"highlight_end":58},{"text":"    Buffer, BufferMut, ZeroCopyBuffer,","highlight_start":1,"highlight_end":39},{"text":"    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},","highlight_start":1,"highlight_end":70},{"text":"};","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BinaryDecoder`, `BinaryEncoder`, `BufferMut`, `Buffer`, `Deserialize`, `LayerState`, `NeuralSerializer`, `Serialize`, `SpikeEvent`, `WeightMatrix`, and `ZeroCopyBuffer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/serialization.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Serialize, Deserialize, BinaryEncoder, BinaryDecoder,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Buffer, BufferMut, ZeroCopyBuffer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    neural::{SpikeEvent, WeightMatrix, LayerState, NeuralSerializer},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `LIFConfig`, `LIFNeuron`, and `network::SpikeNetwork`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/lib.rs","byte_start":5027,"byte_end":5048,"line_start":167,"line_end":167,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"        network::SpikeNetwork,","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/lib.rs","byte_start":5067,"byte_end":5076,"line_start":168,"line_end":168,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"        neuron::{LIFNeuron, LIFConfig},","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/lib.rs","byte_start":5078,"byte_end":5087,"line_start":168,"line_end":168,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"        neuron::{LIFNeuron, LIFConfig},","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/lib.rs","byte_start":4978,"byte_end":4988,"line_start":165,"line_end":166,"column_start":16,"column_end":9,"is_primary":true,"text":[{"text":"    use crate::{","highlight_start":16,"highlight_end":17},{"text":"        hypergraph::HypergraphNetwork,","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/lib.rs","byte_start":5017,"byte_end":5088,"line_start":166,"line_end":168,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"        hypergraph::HypergraphNetwork,","highlight_start":38,"highlight_end":39},{"text":"        network::SpikeNetwork,","highlight_start":1,"highlight_end":31},{"text":"        neuron::{LIFNeuron, LIFConfig},","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"crates/shnn-core/src/lib.rs","byte_start":5088,"byte_end":5095,"line_start":168,"line_end":169,"column_start":39,"column_end":6,"is_primary":true,"text":[{"text":"        neuron::{LIFNeuron, LIFConfig},","highlight_start":39,"highlight_end":40},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `LIFConfig`, `LIFNeuron`, and `network::SpikeNetwork`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/lib.rs:167:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        network::SpikeNetwork,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        neuron::{LIFNeuron, LIFConfig},\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `PlasticConnectivity`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":280,"byte_end":299,"line_start":8,"line_end":8,"column_start":41,"column_end":60,"is_primary":true,"text":[{"text":"    connectivity::{NetworkConnectivity, PlasticConnectivity, types::SpikeRoute},","highlight_start":41,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `PlasticConnectivity`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:8:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectivity::{NetworkConnectivity, PlasticConnectivity, types::SpikeRoute},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/encoding.rs","byte_start":26996,"byte_end":27002,"line_start":886,"line_end":886,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn from_config(config: EncodingConfig) -> Self {","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/encoding.rs","byte_start":26996,"byte_end":27002,"line_start":886,"line_end":886,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn from_config(config: EncodingConfig) -> Self {","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `config`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/encoding.rs:886:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m886\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_config(config: EncodingConfig) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_config`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8241,"byte_end":8244,"line_start":276,"line_end":276,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::sparse::SparseConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8241,"byte_end":8244,"line_start":276,"line_end":276,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::sparse::SparseConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/error.rs:276:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(err: crate::connectivity::sparse::SparseConnectivityError) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_err`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8479,"byte_end":8482,"line_start":282,"line_end":282,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::matrix::MatrixConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8479,"byte_end":8482,"line_start":282,"line_end":282,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::matrix::MatrixConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/error.rs:282:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(err: crate::connectivity::matrix::MatrixConnectivityError) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_err`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8715,"byte_end":8718,"line_start":288,"line_end":288,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::graph::GraphConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8715,"byte_end":8718,"line_start":288,"line_end":288,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::graph::GraphConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/error.rs:288:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(err: crate::connectivity::graph::GraphConnectivityError) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_err`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8958,"byte_end":8961,"line_start":294,"line_end":294,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::hypergraph::HypergraphConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/error.rs","byte_start":8958,"byte_end":8961,"line_start":294,"line_end":294,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::connectivity::hypergraph::HypergraphConnectivityError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/error.rs:294:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(err: crate::connectivity::hypergraph::HypergraphConnectivityError) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_err`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `connection`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/connectivity/hypergraph.rs","byte_start":6214,"byte_end":6224,"line_start":196,"line_end":196,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        connection: Self::ConnectionId,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/connectivity/hypergraph.rs","byte_start":6214,"byte_end":6224,"line_start":196,"line_end":196,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        connection: Self::ConnectionId,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `connection`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/connectivity/hypergraph.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        connection: Self::ConnectionId,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_connection`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/connectivity/types.rs","byte_start":11409,"byte_end":11412,"line_start":357,"line_end":357,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::error::SHNNError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/connectivity/types.rs","byte_start":11409,"byte_end":11412,"line_start":357,"line_end":357,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    fn from(err: crate::error::SHNNError) -> Self {","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/connectivity/types.rs:357:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(err: crate::error::SHNNError) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_err`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `lif_config`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":4948,"byte_end":4958,"line_start":151,"line_end":151,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let lif_config = self.neuron_config.lif_config.clone().unwrap_or_default();","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/builder.rs","byte_start":4948,"byte_end":4958,"line_start":151,"line_end":151,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let lif_config = self.neuron_config.lif_config.clone().unwrap_or_default();","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"_lif_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `lif_config`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/builder.rs:151:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let lif_config = self.neuron_config.lif_config.clone().unwrap_or_default();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_lif_config`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `e`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":10892,"byte_end":10893,"line_start":333,"line_end":333,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"            .map_err(|e| SHNNError::generic(\"Connectivity validation failed\"))?;","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":10892,"byte_end":10893,"line_start":333,"line_end":333,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"            .map_err(|e| SHNNError::generic(\"Connectivity validation failed\"))?;","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"_e","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:333:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .map_err(|e| SHNNError::generic(\"Connectivity validation failed\"))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `current_weight`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":16521,"byte_end":16535,"line_start":516,"line_end":516,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        current_weight: f32,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":16521,"byte_end":16535,"line_start":516,"line_end":516,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        current_weight: f32,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"_current_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `current_weight`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:516:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        current_weight: f32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_current_weight`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `encoder` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":1722,"byte_end":1734,"line_start":63,"line_end":63,"column_start":12,"column_end":24,"is_primary":false,"text":[{"text":"pub struct SpikeNetwork<C, N> ","highlight_start":12,"highlight_end":24}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"crates/shnn-core/src/network/mod.rs","byte_start":2073,"byte_end":2080,"line_start":78,"line_end":78,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    encoder: MultiModalEncoder,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`SpikeNetwork` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `encoder` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcrates/shnn-core/src/network/mod.rs:78:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SpikeNetwork<C, N> \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    encoder: MultiModalEncoder,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `SpikeNetwork` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"20 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 20 warnings emitted\u001b[0m\n\n"}
